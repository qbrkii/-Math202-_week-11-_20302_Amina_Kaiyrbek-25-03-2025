import math

# Define g(x) without NumPy
def g(x):
    return math.sin(x**2) / x**2

# Define f(x) for comparison theorem
def f(x):
    return 1 / x**2

# Trapezoidal rule implementation
def trapezoidal_rule(func, a, b, n=10000):
    dx = (b - a) / n
    total = 0.5 * (func(a) + func(b))  # First and last terms

    for i in range(1, n):
        total += func(a + i * dx)

    return total * dx

# Upper bounds for integral estimation
t_values = [2, 5, 10, 100, 1000, 10000]
integrals = [trapezoidal_rule(g, 1, t) for t in t_values]

# Print results
for t, val in zip(t_values, integrals):
    print(f"Integral from 1 to {t} of g(x): {val:.6f}")

# **Part b: Show Comparison**
print("\nComparison with f(x) = 1/x^2")
for x in range(1, 11):
    print(f"x = {x}, g(x) = {g(x):.6f}, f(x) = {f(x):.6f}")
